<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Estadísticas - Seguimiento de Cultivo Indoor</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-light">
    <div class="container my-5">
        <h1 class="text-center mb-4">Estadísticas de Cultivo</h1>

        <!-- Estadísticas de Riego y Fertilización -->
        <div class="row mb-4">
            <div class="col-md-6">
                <h4>Riego en los Últimos Días</h4>
                <canvas id="graficoRiego"></canvas>
            </div>
            <div class="col-md-6">
                <h4>Fertilización en los Últimos Días</h4>
                <canvas id="graficoFertilizacion"></canvas>
            </div>
        </div>

        <!-- Estadísticas de Anomalías -->
        <div class="row">
            <div class="col-md-12">
                <h4>Anomalías en las Hojas</h4>
                <canvas id="graficoAnomalias"></canvas>
            </div>
        </div>
    </div>

    <script>
        // Datos de ejemplo (estos deberían venir de la base de datos)
        const registros = [
            { fecha: '2024-12-20', riego: 'Sí', fertilizacion: 'No', anomalias: 'Hojas amarillas' },
            { fecha: '2024-12-19', riego: 'No', fertilizacion: 'Sí', anomalias: '' },
            { fecha: '2024-12-18', riego: 'Sí', fertilizacion: 'Sí', anomalias: 'Hojas secas' },
            { fecha: '2024-12-17', riego: 'Sí', fertilizacion: 'No', anomalias: '' },
            { fecha: '2024-12-16', riego: 'Sí', fertilizacion: 'Sí', anomalias: '' }
        ];

        // Contar el número de "Sí" y "No" para riego y fertilización
        const riegoData = registros.reduce((acc, registro) => {
            if (registro.riego === 'Sí') acc['Sí']++;
            else acc['No']++;
            return acc;
        }, { 'Sí': 0, 'No': 0 });

        const fertilizacionData = registros.reduce((acc, registro) => {
            if (registro.fertilizacion === 'Sí') acc['Sí']++;
            else acc['No']++;
            return acc;
        }, { 'Sí': 0, 'No': 0 });

        // Contar anomalías
        const anomaliasData = registros.reduce((acc, registro) => {
            if (registro.anomalias) acc['Con Anomalías']++;
            else acc['Sin Anomalías']++;
            return acc;
        }, { 'Con Anomalías': 0, 'Sin Anomalías': 0 });

        // Configuración del gráfico de riego
        const ctxRiego = document.getElementById('graficoRiego').getContext('2d');
        new Chart(ctxRiego, {
            type: 'pie',
            data: {
                labels: ['Riego Sí', 'Riego No'],
                datasets: [{
                    data: [riegoData['Sí'], riegoData['No']],
                    backgroundColor: ['#36A2EB', '#FF6384'],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return `${tooltipItem.label}: ${tooltipItem.raw} días`;
                            }
                        }
                    }
                }
            }
        });

        // Configuración del gráfico de fertilización
        const ctxFertilizacion = document.getElementById('graficoFertilizacion').getContext('2d');
        new Chart(ctxFertilizacion, {
            type: 'pie',
            data: {
                labels: ['Fertilización Sí', 'Fertilización No'],
                datasets: [{
                    data: [fertilizacionData['Sí'], fertilizacionData['No']],
                    backgroundColor: ['#FFCE56', '#FF6384'],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return `${tooltipItem.label}: ${tooltipItem.raw} días`;
                            }
                        }
                    }
                }
            }
        });

        // Configuración del gráfico de anomalías
        const ctxAnomalias = document.getElementById('graficoAnomalias').getContext('2d');
        new Chart(ctxAnomalias, {
            type: 'pie',
            data: {
                labels: ['Con Anomalías', 'Sin Anomalías'],
                datasets: [{
                    data: [anomaliasData['Con Anomalías'], anomaliasData['Sin Anomalías']],
                    backgroundColor: ['#FF0000', '#4CAF50'],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(tooltipItem) {
                                return `${tooltipItem.label}: ${tooltipItem.raw} días`;
                            }
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>
